/**
 * CSCI E-22 HW#1 Q#2
 * 
 * @author Bryan Miller
 * @date	09/12/2014
 *
 */
public class StringRecursion 
{
	public static void main(String []args)
	{
		printLetters("I like to recurse!");

		System.out.println(replace("base case", 'e', 'y');
		System.out.println(replace("base case", 'r', 'y');

		
	}
	
	// You may find it helpful to employ the substring,
	// charAt, and length methods of the String class as part of your solutions
	
	/**
	 * This method will take the String passed in and separate out its
	 * characters to separate them with a comma and a space.  I 
	 * give credit to the example done in class in the method printVertical.
	 * 
	 * @param str This is the String to reformat and print.
	 */
	public static void printLetters(String str)
	{
		if (str == null || str.equals("")) 
			return;
		else if(str.length()==1)
			System.out.print(str.charAt(0));
		else
			System.out.print(str.charAt(0) + ", ");
		printLetters(str.substring(1)); 
	}
	
	/**
	 * This method returns a String that is formed by replacing all occurrences 
	 * of the character oldChar in the string str with the character newChar.
	 * 
	 * @param str This is the original String.
	 * @param oldChar This is the character to remove all occurrences of.
	 * @param newChar This is the character that replaces the oldChar characters.
	 * @return The newly constructed String is returned.
	 */
	public static String replace(String str, char oldChar, char newChar)
	{
		if(str.equals(null))
			return null;
		if(str.equals(""))
			return "";
	}
	
}
